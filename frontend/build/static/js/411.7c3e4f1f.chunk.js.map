{"version":3,"file":"static/js/411.7c3e4f1f.chunk.js","mappings":"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","sources":["api/socket.js","pages/MatchChatPage.js"],"sourcesContent":["import { io } from 'socket.io-client';\n\nconst SOCKET_URL = process.env.REACT_APP_SOCKET_URL || 'http://localhost:3000';\n\nconst socket = io(SOCKET_URL, {\n  autoConnect: false,\n});\n\nexport default socket;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport socket from '../api/socket';\nimport api from '../api/axios';\nimport { useAuth } from '../context/AuthContext';\n\nfunction MatchChatPage() {\n  const { id } = useParams(); // matchId\n  const { user } = useAuth();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    // Fetch chat history\n    const fetchHistory = async () => {\n      setLoading(true);\n      setError('');\n      try {\n        const res = await api.get(`/chat/matches/${id}`);\n        setMessages(res.data);\n      } catch (err) {\n        setError('Failed to load chat history');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchHistory();\n  }, [id]);\n\n  useEffect(() => {\n    // Connect and join room\n    socket.connect();\n    socket.emit('joinMatch', { matchId: id, teamId: user?._id });\n    socket.on('chatMessage', (msg) => {\n      setMessages((prev) => [...prev, msg]);\n    });\n    return () => {\n      socket.emit('leaveMatch', { matchId: id, teamId: user?._id });\n      socket.off('chatMessage');\n      socket.disconnect();\n    };\n    // eslint-disable-next-line\n  }, [id, user?._id]);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const handleSend = (e) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const msg = {\n      matchId: id,\n      sender: { teamName: user?.teamName, collegeName: user?.collegeName, _id: user?._id },\n      message: input,\n      timestamp: new Date().toISOString(),\n    };\n    socket.emit('chatMessage', msg);\n    setInput('');\n  };\n\n  if (loading) return <div>Loading chat...</div>;\n  if (error) return <div style={{ color: 'red' }}>{error}</div>;\n\n  return (\n    <div style={{ maxWidth: 600, margin: '0 auto' }}>\n      <h2>Match Chat</h2>\n      <div style={{ border: '1px solid #ccc', padding: 16, height: 400, overflowY: 'auto', background: '#f9f9f9' }}>\n        {messages.map((msg, i) => (\n          <div key={i} style={{ marginBottom: 12 }}>\n            <div><strong>{msg.sender?.teamName || 'Unknown'} ({msg.sender?.collegeName || 'Unknown'})</strong></div>\n            <div>{msg.message}</div>\n            <div style={{ fontSize: 12, color: '#888' }}>{new Date(msg.timestamp).toLocaleString()}</div>\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n      <form onSubmit={handleSend} style={{ marginTop: 12, display: 'flex', gap: 8 }}>\n        <input\n          value={input}\n          onChange={e => setInput(e.target.value)}\n          placeholder=\"Type a message...\"\n          style={{ flex: 1 }}\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default MatchChatPage;\n"],"names":["SOCKET_URL","process","REACT_APP_SOCKET_URL","io","autoConnect","id","useParams","user","useAuth","messages","setMessages","useState","input","setInput","loading","setLoading","error","setError","messagesEndRef","useRef","useEffect","async","res","api","get","data","err","fetchHistory","socket","connect","emit","matchId","teamId","_id","on","msg","prev","off","disconnect","_messagesEndRef$curre","current","scrollIntoView","behavior","_jsx","children","style","color","_jsxs","maxWidth","margin","border","padding","height","overflowY","background","map","i","_msg$sender","_msg$sender2","marginBottom","sender","teamName","collegeName","message","fontSize","Date","timestamp","toLocaleString","ref","onSubmit","e","preventDefault","trim","toISOString","marginTop","display","gap","value","onChange","target","placeholder","flex","type"],"sourceRoot":""}
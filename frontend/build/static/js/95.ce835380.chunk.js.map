{"version":3,"file":"static/js/95.ce835380.chunk.js","mappings":"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","sources":["components/admin/AdminTeams.js","components/admin/AdminMatches.js","components/admin/AdminAdmins.js","pages/AdminDashboardPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from '../../api/axios';\n\nfunction AdminTeams() {\n  const [teams, setTeams] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [editTeam, setEditTeam] = useState(null);\n  const [form, setForm] = useState({ name: '', college: '' });\n\n  const fetchTeams = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const res = await api.get('/admin/teams');\n      setTeams(res.data);\n    } catch (err) {\n      setError('Failed to fetch teams');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => { fetchTeams(); }, []);\n\n  const handleChange = e => setForm({ ...form, [e.target.name]: e.target.value });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (editTeam) {\n        await api.put(`/admin/teams/${editTeam._id}`, form);\n      } else {\n        await api.post('/admin/teams', form);\n      }\n      setForm({ name: '', college: '' });\n      setEditTeam(null);\n      fetchTeams();\n    } catch {\n      setError('Failed to save team');\n    }\n  };\n\n  const handleEdit = team => {\n    setEditTeam(team);\n    setForm({ name: team.name, college: team.college });\n  };\n\n  const handleDelete = async id => {\n    if (!window.confirm('Delete this team?')) return;\n    try {\n      await api.delete(`/admin/teams/${id}`);\n      fetchTeams();\n    } catch {\n      setError('Failed to delete team');\n    }\n  };\n\n  return (\n    <div>\n      <h3>Teams</h3>\n      {error && <div style={{ color: 'red' }}>{error}</div>}\n      <form onSubmit={handleSubmit} style={{ marginBottom: 16 }}>\n        <input name=\"name\" value={form.name} onChange={handleChange} placeholder=\"Team Name\" required />\n        <input name=\"college\" value={form.college} onChange={handleChange} placeholder=\"College\" required />\n        <button type=\"submit\">{editTeam ? 'Update' : 'Create'}</button>\n        {editTeam && <button type=\"button\" onClick={() => { setEditTeam(null); setForm({ name: '', college: '' }); }}>Cancel</button>}\n      </form>\n      {loading ? <div>Loading...</div> : (\n        <table border=\"1\" cellPadding=\"8\">\n          <thead><tr><th>Name</th><th>College</th><th>Actions</th></tr></thead>\n          <tbody>\n            {teams.map(team => (\n              <tr key={team._id}>\n                <td>{team.name}</td>\n                <td>{team.college}</td>\n                <td>\n                  <button onClick={() => handleEdit(team)}>Edit</button>\n                  <button onClick={() => handleDelete(team._id)}>Delete</button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default AdminTeams;\n","import React, { useEffect, useState } from 'react';\nimport api from '../../api/axios';\n\nfunction AdminMatches() {\n  const [matches, setMatches] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [editMatch, setEditMatch] = useState(null);\n  const [form, setForm] = useState({ teamA: '', teamB: '', date: '', matchTime: '' });\n\n  const fetchMatches = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const res = await api.get('/admin/matches');\n      setMatches(res.data);\n    } catch (err) {\n      setError('Failed to fetch matches');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => { fetchMatches(); }, []);\n\n  const handleChange = e => setForm({ ...form, [e.target.name]: e.target.value });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (editMatch) {\n        await api.put(`/admin/matches/${editMatch._id}`, form);\n      } else {\n        await api.post('/admin/matches', form);\n      }\n      setForm({ teamA: '', teamB: '', date: '', matchTime: '' });\n      setEditMatch(null);\n      fetchMatches();\n    } catch {\n      setError('Failed to save match');\n    }\n  };\n\n  const handleEdit = match => {\n    setEditMatch(match);\n    setForm({ teamA: match.teamA, teamB: match.teamB, date: match.date, matchTime: match.matchTime });\n  };\n\n  const handleDelete = async id => {\n    if (!window.confirm('Delete this match?')) return;\n    try {\n      await api.delete(`/admin/matches/${id}`);\n      fetchMatches();\n    } catch {\n      setError('Failed to delete match');\n    }\n  };\n\n  return (\n    <div>\n      <h3>Matches</h3>\n      {error && <div style={{ color: 'red' }}>{error}</div>}\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"teamA\"\n          placeholder=\"Team A\"\n          value={form.teamA}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"teamB\"\n          placeholder=\"Team B\"\n          value={form.teamB}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"date\"\n          name=\"date\"\n          value={form.date}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"time\"\n          name=\"matchTime\"\n          value={form.matchTime}\n          onChange={handleChange}\n          required\n        />\n        <button type=\"submit\">{editMatch ? 'Update' : 'Create'}</button>\n        {editMatch && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              setEditMatch(null);\n              setForm({ teamA: '', teamB: '', date: '', matchTime: '' });\n            }}\n          >\n            Cancel\n          </button>\n        )}\n      </form>\n      {loading ? (\n        <div>Loading...</div>\n      ) : (\n        <table border=\"1\" cellPadding=\"8\">\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Time</th>\n              <th>Team A</th>\n              <th>Team B</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {matches.map((match) => (\n              <tr key={match._id}>\n                <td>{match.date}</td>\n                <td>{match.matchTime}</td>\n                <td>{match.teamA}</td>\n                <td>{match.teamB}</td>\n                <td>\n                  <button onClick={() => handleEdit(match)}>Edit</button>\n                  <button onClick={() => handleDelete(match._id)}>Delete</button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default AdminMatches;\n","import React, { useEffect, useState } from 'react';\nimport api from '../../api/axios';\n\nfunction AdminAdmins() {\n  const [admins, setAdmins] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [editAdmin, setEditAdmin] = useState(null);\n  const [form, setForm] = useState({ email: '', name: '', password: '' });\n\n  const fetchAdmins = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const res = await api.get('/admin/admins');\n      setAdmins(res.data);\n    } catch (err) {\n      setError('Failed to fetch admins');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => { fetchAdmins(); }, []);\n\n  const handleChange = e => setForm({ ...form, [e.target.name]: e.target.value });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (editAdmin) {\n        await api.put(`/admin/admins/${editAdmin._id}`, form);\n      } else {\n        await api.post('/admin/admins', form);\n      }\n      setForm({ email: '', name: '', password: '' });\n      setEditAdmin(null);\n      fetchAdmins();\n    } catch {\n      setError('Failed to save admin');\n    }\n  };\n\n  const handleEdit = admin => {\n    setEditAdmin(admin);\n    setForm({ email: admin.email, name: admin.name, password: '' });\n  };\n\n  const handleDelete = async id => {\n    if (!window.confirm('Delete this admin?')) return;\n    try {\n      await api.delete(`/admin/admins/${id}`);\n      fetchAdmins();\n    } catch {\n      setError('Failed to delete admin');\n    }\n  };\n\n  return (\n    <div>\n      <h3>Admins</h3>\n      {error && <div style={{ color: 'red' }}>{error}</div>}\n      <form onSubmit={handleSubmit} style={{ marginBottom: 16 }}>\n        <input name=\"email\" value={form.email} onChange={handleChange} placeholder=\"Email\" required />\n        <input name=\"name\" value={form.name} onChange={handleChange} placeholder=\"Name\" required />\n        <input name=\"password\" value={form.password} onChange={handleChange} placeholder=\"Password\" type=\"password\" required={!editAdmin} />\n        <button type=\"submit\">{editAdmin ? 'Update' : 'Create'}</button>\n        {editAdmin && <button type=\"button\" onClick={() => { setEditAdmin(null); setForm({ email: '', name: '', password: '' }); }}>Cancel</button>}\n      </form>\n      {loading ? <div>Loading...</div> : (\n        <table border=\"1\" cellPadding=\"8\">\n          <thead><tr><th>Email</th><th>Name</th><th>Actions</th></tr></thead>\n          <tbody>\n            {admins.map(admin => (\n              <tr key={admin._id}>\n                <td>{admin.email}</td>\n                <td>{admin.name}</td>\n                <td>\n                  <button onClick={() => handleEdit(admin)}>Edit</button>\n                  <button onClick={() => handleDelete(admin._id)}>Delete</button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default AdminAdmins;\n","import React, { useState } from 'react';\nimport AdminTeams from '../components/admin/AdminTeams';\nimport AdminMatches from '../components/admin/AdminMatches';\nimport AdminAdmins from '../components/admin/AdminAdmins';\n\nconst tabs = [\n  { name: 'Teams', component: <AdminTeams /> },\n  { name: 'Matches', component: <AdminMatches /> },\n  { name: 'Admins', component: <AdminAdmins /> },\n];\n\nfunction AdminDashboardPage() {\n  const [tab, setTab] = useState(0);\n  return (\n    <div style={{ padding: 24 }}>\n      <h2>Admin Dashboard</h2>\n      <div style={{ display: 'flex', gap: 16, marginBottom: 24 }}>\n        {tabs.map((t, i) => (\n          <button key={t.name} onClick={() => setTab(i)} style={{ fontWeight: tab === i ? 'bold' : 'normal' }}>{t.name}</button>\n        ))}\n      </div>\n      <div>{tabs[tab].component}</div>\n    </div>\n  );\n}\n\nexport default AdminDashboardPage;\n"],"names":["teams","setTeams","useState","loading","setLoading","error","setError","editTeam","setEditTeam","form","setForm","name","college","fetchTeams","async","res","api","get","data","err","useEffect","handleChange","e","target","value","_jsxs","children","_jsx","style","color","onSubmit","preventDefault","put","_id","post","marginBottom","onChange","placeholder","required","type","onClick","border","cellPadding","map","team","handleEdit","window","confirm","delete","id","handleDelete","matches","setMatches","editMatch","setEditMatch","teamA","teamB","date","matchTime","fetchMatches","match","admins","setAdmins","editAdmin","setEditAdmin","email","password","fetchAdmins","admin","tabs","component","AdminTeams","AdminMatches","AdminAdmins","tab","setTab","padding","display","gap","t","i","fontWeight"],"sourceRoot":""}
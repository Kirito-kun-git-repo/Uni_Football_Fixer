{"version":3,"file":"static/js/129.0b68b50d.chunk.js","mappings":"qMAuDA,QAnDA,WACE,MAAM,GAAEA,IAAOC,EAAAA,EAAAA,MACRC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,OAC5BC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,KAChCG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAChCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,KAEnCO,EAAAA,EAAAA,WAAU,KACRC,KACC,IAEH,MAAMA,EAAeC,UACnBL,GAAW,GACXE,EAAS,IACT,IACE,MAAMI,QAAiBC,EAAAA,EAAIC,IAAI,YAAYhB,KAC3CG,EAASW,EAASG,MAElB,IACE,MAAMC,QAAmBH,EAAAA,EAAIC,IAAI,kBAAkBhB,KACnDM,EAAWY,EAAWD,KACxB,CAAE,MAAO,CACX,CAAE,MAAOE,GACPT,EAAS,+BACX,CAAC,QACCF,GAAW,EACb,GAGF,OAAID,GAAgBa,EAAAA,EAAAA,KAAA,OAAAC,SAAK,eACrBZ,GAAcW,EAAAA,EAAAA,KAAA,OAAKE,MAAO,CAAEC,MAAO,OAAQF,SAAEZ,IAC5CP,GAGHsB,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAKnB,EAAMuB,SACXD,EAAAA,EAAAA,MAAA,OAAAH,SAAA,CAAK,SAAOnB,EAAMwB,KAAK,UAAQxB,EAAMyB,cACrCH,EAAAA,EAAAA,MAAA,OAAAH,SAAA,CAAK,aAAWnB,EAAM0B,aACtBJ,EAAAA,EAAAA,MAAA,OAAAH,SAAA,CAAK,gBAAcnB,EAAM2B,gBACzBT,EAAAA,EAAAA,KAAA,MAAAC,SAAI,aACJD,EAAAA,EAAAA,KAAA,MAAAC,SACGhB,EAAQyB,IAAIC,IAAM,IAAAC,EAAA,OACjBR,EAAAA,EAAAA,MAAA,MAAAH,SAAA,CAAqB,UACG,QAAfW,EAAAD,EAAOE,gBAAQ,IAAAD,OAAA,EAAfA,EAAiBE,WAAYH,EAAOE,SAAS,cAAYF,EAAOI,SADhEJ,EAAOK,aAXLhB,EAAAA,EAAAA,KAAA,OAAAC,SAAK,mBAkB1B,C","sources":["pages/MatchDetailsPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../api/axios';\n\nfunction MatchDetailsPage() {\n  const { id } = useParams();\n  const [match, setMatch] = useState(null);\n  const [invites, setInvites] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    fetchDetails();\n  }, []);\n\n  const fetchDetails = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const matchRes = await api.get(`/matches/${id}`);\n      setMatch(matchRes.data);\n      // Optionally fetch invites for this match if endpoint exists\n      try {\n        const invitesRes = await api.get(`/invites/match/${id}`);\n        setInvites(invitesRes.data);\n      } catch {}\n    } catch (err) {\n      setError('Failed to load match details');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div style={{ color: 'red' }}>{error}</div>;\n  if (!match) return <div>Match not found</div>;\n\n  return (\n    <div>\n      <h2>{match.title}</h2>\n      <div>Date: {match.date} Time: {match.matchTime}</div>\n      <div>Location: {match.location}</div>\n      <div>Description: {match.description}</div>\n      <h3>Invites</h3>\n      <ul>\n        {invites.map(invite => (\n          <li key={invite._id}>\n            From: {invite.fromTeam?.teamName || invite.fromTeam} | Status: {invite.status}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default MatchDetailsPage;\n"],"names":["id","useParams","match","setMatch","useState","invites","setInvites","loading","setLoading","error","setError","useEffect","fetchDetails","async","matchRes","api","get","data","invitesRes","err","_jsx","children","style","color","_jsxs","title","date","matchTime","location","description","map","invite","_invite$fromTeam","fromTeam","teamName","status","_id"],"sourceRoot":""}